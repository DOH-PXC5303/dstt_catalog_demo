---
# title: "DSTT Data Catalog"
# description: Github, Azure, AWS policies and guidelines
filters:
  - shinylive
format: 
  html: 
    toc: false
    number-sections: false
    title-block-banner: false
    mainfont: Manrope
---

```{r}
#| include: false
library(dplyr)
library(jsonlite)
# # list all files inside ./data besides those with "README" in directory/name
# data_fp <- list.files('./data', pattern="^[^(.*)(README)].*$", full.names=TRUE, recursive=TRUE)

# read in metadata for our data products:
metadata_df <- read.csv('metadata.csv', sep='\t')

### DEV: create example metadata df to test with:
# create new test df with multiple values separated by semicolons:
metadata_df <- structure(
  list(
    Product_Name = c(
      "wa_genbank",
      "lineages",
      "theiacov_output",
      "cov_sequencing_report",
      "starlims"),
    parent = c(
      "theiacov_output;starlims",
      NA,
      NA,
      "lineages;wa_genbank",
      NA),
    child = c(
      "cov_sequencing_report",
      "cov_sequencing_report",
      "wa_genbank;lineages",
      NA,
      "wa_genbank")
  ), row.names = c(NA, 5L), class = "data.frame")
### DEV end

metadata_df_expanded <- metadata_df %>%
  # Separate rows for `parent` and `child` columns:
  tidyr::separate_rows(parent, sep = ";") %>% 
  tidyr::separate_rows(child, sep = ";") %>% 
  # Add direct parent/child columns for ojs to track if intermediate link created:
  mutate(direct_parent = ifelse(is.na(parent), NA, TRUE),
         direct_child = ifelse(is.na(child), NA, TRUE))

# Convert the metadata dataframe to a list of lists (JavaScript array of objects)
metadata_df_json <- toJSON(metadata_df_expanded, dataframe = "rows", pretty = TRUE)

# make metadata available to ojs
ojs_define(metadata_json = metadata_df_json)

# make products (unique names of our data products) available to ojs
ojs_define(products = unique(metadata_df$Product_Name))

```


::: container

::: content
<h1 class="css-qp8v3">

::: css-nzw60t
NORTHWEST PATHOGEN GENOMICS CENTER OF EXCELLENCE
:::

Data Catalog

</h1>

This is a static website and demo of a data catalog. Search for data objects in the dashboard below.

<a href="#shinyapp" class="button">dashboard</a>

<!-- {{< bi github size=2em href="https://github.com/NW-PaGe/standards" >}} -->
:::

::: image
![](assets/nwpage_tree_logo.png){width="250"}
:::

:::

:::: {.splash-page}

:::{.column-screen-inset}

```{shinylive-r}
#| standalone: true
#| components: [editor, viewer]
#| viewerHeight: 600

## file: app.R
# import docx_to_html function
{{< include "dag_test.R" >}} 
```
:::

:::{.column-screen-inset}

```{shinylive-r}
#| standalone: true
#| components: [editor, viewer]
#| viewerHeight: 600

## file: app.R
# import docx_to_html function
{{< include "src/docx_to_html.R" >}}
# import split_values.R
{{< include "src/split_values.R" >}}
 # import server & ui code
{{< include "src/shinyapp_example.R" >}}



## file: metadata.csv
{{< include "metadata.csv" >}}

```
:::

::::

